@* @model IEnumerable<MvcFPTBook.Models.Publisher>; *@
@model PaginatedList<MvcFPTBook.Models.Publisher>

@{

    Layout = "_AdminLayout";

    ViewData["Title"] = "Index";
}

<h1 class="p-3 mb-2 bg-info text-dark">Pulisher List</h1>
<div class="d-grid gap-2 d-md-flex justify-content-md-end">
    <p>
        <a asp-action="Create" type="button" class="btn btn-primary">Create New</a>
    </p>
    <form asp-action="Index" method="get">
        <div class="form-actions">
            <p>
                Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                <input type="submit" value="Search" class="btn btn-default" /> |
                <a asp-action="Index">Back to Full List</a>
            </p>
        </div>
    </form>
    <p>
        <a asp-action="ExportPublicsherList" type="button" class="btn btn-outline-success "><i
                class="fa-solid fa-file-excel"></i></a>
    </p>
</div>
<table class="table table-striped">
    <thead class="table-info">
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]"
                    asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a>

            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["AddressSortParm"]"
                    asp-route-currentFilter="@ViewData["CurrentFilter"]">Address</a>

            </th>
            <th>
                Phone
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)

        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" type="button" class="btn btn-warning"><i
                        class="fa-solid fa-pen-to-square"></i></a> |
                    <a asp-action="Details" asp-route-id="@item.Id" type="button" class="btn btn-secondary"><i
                        class="fa-solid fa-circle-info"></i></a> |
                    <a asp-action="Delete" asp-route-id="@item.Id" type="button" class="btn btn-danger"><i
                        class="fa-solid fa-trash"></i></a>
                </td>
            </tr>

        }
    </tbody>
</table>
@{

    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";

    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex - 1)"
    asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex + 1)"
    asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-default @nextDisabled">
    Next
</a>